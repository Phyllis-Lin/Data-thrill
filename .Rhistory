geom_vline(xintercept = mean(plot_interval$interval),
colour = "red")+
labs(x="interval(day)")
grid.arrange(interval_c,interval_r,ncol=2)
runApp('app')
knitr::opts_chunk$set(echo = FALSE, cache=TRUE, messages=FALSE, warning=FALSE)
# Make sure you have the latest versions of rmarkdown and bookdown installed
library(ggplot2)
library(tidyverse)
library(countrycode)
library(lubridate)
library(naniar)
hotels <- read.csv("data/hotels.csv")
library(gridExtra)
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=7))+
geom_text(aes(label=prop),hjust = -0.008, size = 2)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=7))+
geom_text(aes(label=prop),hjust = -0.008, size = 2)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=10))+
geom_text(aes(label=prop),hjust = -0.008, size = 4)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=10))+
geom_text(aes(label=prop),hjust = -0.008, size = 4)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
runApp('app')
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=12))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.5)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=12))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.5)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=12))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.5)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=12))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.5)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
runApp('app')
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.5)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.5)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
runApp('app')
interval_c <- plot_interval%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x = interval,
y = ..density..)) +
geom_density(fill = "white") +
geom_vline(xintercept = mean(plot_interval$interval),
colour = "red")+
labs(x="interval(day)")
interval_r <- plot_interval%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x = interval,
y = ..density..)) +
geom_density(fill = "white") +
geom_vline(xintercept = mean(plot_interval$interval),
colour = "red")+
labs(x="interval(day)")
grid.arrange(interval_c,interval_r,ncol=2)
View(plot_interval)
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, warning = FALSE,
message = FALSE, error = FALSE, tidy.opts = list(width.cutoff = 60),
tidy = TRUE)
options(digits = 6)
dt <- NHANES %>%
distinct(ID, .keep_all = TRUE)
library(tidyverse)
library(broom)
library(kableExtra)
library(NHANES)
options(digits = 6)
dt <- NHANES %>%
distinct(ID, .keep_all = TRUE)
dt <- dt  %>%
filter(Age >= 18) %>%
dplyr::select(Gender, Age, HomeOwn, BPSysAve, BPSys2, BPSys3)
dt <- dt %>%
drop_na()
dt1 <- dt %>%
mutate(Age=as.numeric(Age),
BPSysAve=as.numeric(BPSysAve),
BPSys2=as.numeric(BPSys2),
BPSys3=as.numeric(BPSys3))
p1a.density <- dt1%>%
pivot_longer(cols="BPSys2":"BPSys3",names_to="assess",values_to = "value")%>%
ggplot(aes(value,fill=as.factor(assess)))+
geom_density(alpha=0.3) +
xlab("Systolic blood pressure assessment") +
ylab("Value")
p1a.density
plot_interval%>%
ggplot(aes(interval,fill=as.factor(hotel)))+
geom_density(alpha=0.3)
plot_interval%>%
ggplot(aes(interval,fill=as.factor(hotel)))+
geom_density(alpha=0.3)+
geom_vline(xintercept = mean(plot_interval$interval),
colour = "red")+
labs(x="interval(day)")
interval_c <- plot_interval%>%
filter(hotel=="City Hotel")
interval_r <- plot_interval%>%
filter(hotel=="Resort Hotel")
plot_combined <- plot_interval%>%
ggplot(aes(interval,fill=as.factor(hotel)))+
geom_density(alpha=0.3)+
geom_vline(xintercept = mean(interval_c$interval),
colour = "red")+
geom_vline(xintercept = mean(interval_r$interval),
colour = "blue")+
labs(x="interval(day)")
interval_c <- plot_interval%>%
filter(hotel=="City Hotel")
interval_r <- plot_interval%>%
filter(hotel=="Resort Hotel")
plot_combined <- plot_interval%>%
ggplot(aes(interval,fill=as.factor(hotel)))+
geom_density(alpha=0.3)+
geom_vline(xintercept = mean(interval_c$interval),
colour = "red")+
geom_vline(xintercept = mean(interval_r$interval),
colour = "blue")+
labs(x="interval(day)")
plot_combined
interval_c <- plot_interval%>%
filter(hotel=="City Hotel")
interval_r <- plot_interval%>%
filter(hotel=="Resort Hotel")
plot_combined <- plot_interval%>%
ggplot(aes(interval,fill=as.factor(hotel)))+
geom_density(alpha=0.3)+
geom_vline(xintercept = mean(interval_c$interval),
colour = "red")+
geom_vline(xintercept = mean(interval_r$interval),
colour = "blue")+
labs(x="interval(day)")
plot_combined
interval_c <- plot_interval%>%
filter(hotel=="City Hotel")
interval_r <- plot_interval%>%
filter(hotel=="Resort Hotel")
plot_combined <- plot_interval%>%
ggplot(aes(interval,fill=as.factor(hotel)))+
geom_density(alpha=0.3)+
geom_vline(xintercept = mean(interval_c$interval),
colour = "red")+
geom_vline(xintercept = mean(interval_r$interval),
colour = "blue")+
labs(x="interval(day)")
plot_combined
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
usethis::use_readme_rmd()
devtools::install_github("hadley/emo")
emo::ji("face")
emo::ji("bar")
emo::ji()
emo::ji("description")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.3)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.3)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
runApp('app')
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.2)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.2)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.2)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.2)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
runApp('app')
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.1)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2.1)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
runApp('app')
a <- final%>%
select(hotel,Country,is_repeated_guest)%>%
count(hotel,Country,is_repeated_guest)%>%
pivot_wider(names_from="is_repeated_guest",values_from=n)%>%
rename(not_repeated_guest="0",repeated_guest="1")%>%
filter(!is.na(repeated_guest))%>%
mutate(prop=round(repeated_guest/(not_repeated_guest+repeated_guest),digits=3))%>%
arrange(desc(prop))%>%
ungroup()%>%
slice_head(n =20)
prop_c <- a%>%
filter(hotel=="City Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of City Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2)+
scale_y_continuous(breaks=seq(0,1,0.02))
prop_r <- a%>%
filter(hotel=="Resort Hotel")%>%
ggplot(aes(x=reorder(Country,prop),y=prop))+
geom_col(show.legend = FALSE)+
coord_flip()+
theme_minimal()+
labs(title = "Repeated guest proportion of Resort Hotel from July 2015 to August 2017",
x = "",
y="proportion")+
theme(plot.title=element_text(size=11.5))+
geom_text(aes(label=prop),hjust = -0.008, size = 2)+
scale_y_continuous(breaks=seq(0,1,0.2))
grid.arrange(prop_c,prop_r,ncol=2)
runApp('app')
runApp('app')
